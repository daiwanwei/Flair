{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_basePaymentToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_initialAdmin",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "amount",
						"type": "uint32"
					}
				],
				"name": "PackPurchased",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "basePaymentToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "drawContract",
				"outputs": [
					{
						"internalType": "contract IHierarchicalDrawing",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"name": "packsInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "basePrice",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "_packID",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_packAmounts",
						"type": "uint32"
					}
				],
				"name": "purchasePack",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_drawContract",
						"type": "address"
					}
				],
				"name": "setDrawContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_packID",
						"type": "uint32"
					},
					{
						"internalType": "uint256",
						"name": "_packPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint32[]",
						"name": "_poolsID",
						"type": "uint32[]"
					},
					{
						"internalType": "uint32[]",
						"name": "_amounts",
						"type": "uint32[]"
					}
				],
				"name": "setPack",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "totalAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdrawFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawNative",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"MarketplaceExample.sol": "MarketplaceReceiver"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
			"keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
			"license": "MIT",
			"urls": [
				"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
				"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
			"license": "MIT",
			"urls": [
				"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
				"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
				"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"IHierarchicalDrawing.sol": {
			"keccak256": "0xb8656df58e368e6cdd6d8bfa7cf727053e5817cef39752a71522fb4aad2ed8a8",
			"license": "MIT",
			"urls": [
				"bzz-raw://d815da347067972f6fd2d48abc04f02d3ce3109c7f1d2568b2606db677213a13",
				"dweb:/ipfs/QmdoXprwd7X7FKsc6ArZMeVdyeqLbJHTqeC1sMPEMv4WDa"
			]
		},
		"IMyNFT.sol": {
			"keccak256": "0x9d234126e472acb2c05caa86ffbb22fc317783dc83a9c9962f516ee6540257ca",
			"license": "MIT",
			"urls": [
				"bzz-raw://a212d591f3db9bfbbabf52e5f7eecca9514010c90a26dc95531aea6e4103bcd4",
				"dweb:/ipfs/QmaZuWVLLAXEbugUvFpepf7o2n3QWZzH7itE9nm5hhPQC5"
			]
		},
		"IVRFManager.sol": {
			"keccak256": "0x8b2c39f4e62d3fe245675479e8706f4a20a75d5e7847c38533b66124d6ee22f4",
			"license": "MIT",
			"urls": [
				"bzz-raw://2c42df5a8c87915619ff233762ea85f272b80a1fdd79891d170fa822643af648",
				"dweb:/ipfs/QmTyVnryVGNRcNXPV5fvNcrZfh8VhBbkytU2BTTKFumtgY"
			]
		},
		"MarketplaceExample.sol": {
			"keccak256": "0xb8ec8974f7241b7d52b2284339f939c454593d9f987ea0d39fc3fb8709c47411",
			"license": "MIT",
			"urls": [
				"bzz-raw://771161fb7e833abb24dbcba5d503c4f0a3fcebb1ace0b2fab0c314d6166c6025",
				"dweb:/ipfs/QmX9fbUxPknrNVbhFw8SkSjVQjkrrvx6zmf8vkiPqnTdm8"
			]
		},
		"PackedArray.sol": {
			"keccak256": "0xfeb256c707fedc4cf0cc8c50a7170d8485093db0f1ccb4fad2f2fc7d4200a69b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb81c3314fd65248398583101d5dfd9eb75d8fb9c9004dc3691f10694c602c03",
				"dweb:/ipfs/QmdPpzp1w99uUPdaVL3tCZaPmNdoS1sZk1fsK9KvyU4KHh"
			]
		}
	},
	"version": 1
}